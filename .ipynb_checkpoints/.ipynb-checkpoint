{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2 added to each number regular way: [3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n",
      "\n",
      "2 added to each number comprehensive way: [3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n",
      "\n",
      "The list cubed: [1, 8, 27, 64, 125, 216, 343, 512, 729, 1000]\n",
      "\n",
      "The list but only with numbers divisible by 3: [3, 6, 9]\n"
     ]
    }
   ],
   "source": [
    "basic_list = []\n",
    "for num in range(10):\n",
    "    basic_list.append(1 + num)\n",
    "for num in range(10): \n",
    "    basic_list[num] = basic_list[num] + 2\n",
    "\n",
    "print(\"2 added to each number regular way: \" + str(basic_list) )\n",
    "\n",
    "basic_list2 = []\n",
    "for num in range(10):\n",
    "    basic_list2.append(1 + num)\n",
    "basic_list2 = [num + 2 for num in basic_list2]\n",
    "\n",
    "print(\"\\n2 added to each number comprehensive way: \" + str(basic_list2) )\n",
    "\n",
    "list_cubed = []\n",
    "for num in range(10):\n",
    "    list_cubed.append((1 + num)**3)\n",
    "\n",
    "print(\"\\nThe list cubed: \" + str(list_cubed) )\n",
    "\n",
    "list_div3 = []\n",
    "for num in range(10):\n",
    "    if (num + 1) % 3 == 0:\n",
    "        list_div3.append((1 + num))\n",
    "\n",
    "print(\"\\nThe list but only with numbers divisible by 3: \" + str(list_div3) )"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
